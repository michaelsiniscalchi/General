function colors = setPlotColors(cbrew,experiment)

switch experiment
    case {'mjs_taskLearningWalls', 'mjs_taskLearning_VTA_1'}
        colors = struct(...
            'left', cbrew.red, 'right', cbrew.blue,...
            'series',cbrew.series,... %Data series, eg longitudinal by subject
            'trialTypes',struct(...
            'correct',cbrew.green,'error',cbrew.pink,'priorCorrect',cbrew.green,'priorError',cbrew.pink,...
            'congruent',cbrew.black,'conflict',cbrew.red),...
            'predictor',struct('cueSide', cbrew.black, 'priorChoice', cbrew.black, 'bias', cbrew.black,... %GLM Predictors
            'congruent', cbrew.black, 'conflict', cbrew.black,'rewChoice',cbrew.green,'unrewChoice',cbrew.pink),...%GLM Predictors
            'pCorrect',cbrew.black,'pCorrect_congruent',cbrew.black,'pCorrect_conflict',cbrew.red,... %Proportions
            'pOmit',cbrew.black,'pStuck',cbrew.black,... %Proportions
            'maxCorrectMoving',cbrew.black,'maxCorrectMoving_congruent',cbrew.black,'maxCorrectMoving_conflict',cbrew.red,...
            'median_pSkid',cbrew.orange,'median_stuckTime',cbrew.orange,'median_velocity',cbrew.green,...
            'bias',cbrew.red,...
            'level',[repmat(cbrew.gray,6,1);cbrew.blue; cbrew.blue; cbrew.purple; cbrew.purple]); %Maze level
        if experiment=='mjs_taskLearning_VTA_1'
            colors.level = [repmat(cbrew.gray,5,1); cbrew.blue; cbrew.purple]; %Maze level
        end
    otherwise
        colors = struct(...
            'left', cbrew.red, 'right', cbrew.blue,...
            'series',cbrew.series,... %Data series, eg longitudinal by subject
            'trialTypes',struct(...
            'correct',cbrew.green,'error',cbrew.pink,'priorCorrect',cbrew.green,'priorError',cbrew.pink,...
            'congruent',cbrew.black,'conflict',cbrew.red),...
            'cueSide', cbrew.black, 'priorChoice', cbrew.black, 'bias', cbrew.black,... %GLM Predictors
            'congruent', cbrew.black, 'conflict', cbrew.black,'rewChoice',cbrew.green,'unrewChoice',cbrew.pink,...
            'R_cue_choice', cbrew.red, 'R_priorChoice_choice', cbrew.red,'R_predictors', cbrew.red,... %Correlations
            'R_conflict_choice', cbrew.red, 'R_congruent_choice',cbrew.red,...
            'pRightCue', cbrew.red, 'pRightChoice', cbrew.red,'pConflict',cbrew.red,...
            'pCorrect',cbrew.black,'pCorrect_congruent',cbrew.black,'pCorrect_conflict',cbrew.red,... %Proportions
            'conditionNum', cbrew.green, 'N', cbrew.black,...
            'level',[cbrew.blue; cbrew.blue; cbrew.blue; cbrew.blue; cbrew.blue; cbrew.blue; cbrew.red]); %Maze level
end
